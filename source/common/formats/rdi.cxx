// Copyright (C) 2005-2008 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/pre.hxx>

#include "rdi.hxx"

// image_info_t
//

const image_info_t::Study_Name_type& image_info_t::
Study_Name () const
{
  return this->Study_Name_.get ();
}

image_info_t::Study_Name_type& image_info_t::
Study_Name ()
{
  return this->Study_Name_.get ();
}

void image_info_t::
Study_Name (const Study_Name_type& x)
{
  this->Study_Name_.set (x);
}

void image_info_t::
Study_Name (::std::auto_ptr< Study_Name_type > x)
{
  this->Study_Name_.set (x);
}

const image_info_t::Image_Id_type& image_info_t::
Image_Id () const
{
  return this->Image_Id_.get ();
}

image_info_t::Image_Id_type& image_info_t::
Image_Id ()
{
  return this->Image_Id_.get ();
}

void image_info_t::
Image_Id (const Image_Id_type& x)
{
  this->Image_Id_.set (x);
}

void image_info_t::
Image_Id (::std::auto_ptr< Image_Id_type > x)
{
  this->Image_Id_.set (x);
}

const image_info_t::Image_Label_type& image_info_t::
Image_Label () const
{
  return this->Image_Label_.get ();
}

image_info_t::Image_Label_type& image_info_t::
Image_Label ()
{
  return this->Image_Label_.get ();
}

void image_info_t::
Image_Label (const Image_Label_type& x)
{
  this->Image_Label_.set (x);
}

void image_info_t::
Image_Label (::std::auto_ptr< Image_Label_type > x)
{
  this->Image_Label_.set (x);
}

const image_info_t::Image_Frames_type& image_info_t::
Image_Frames () const
{
  return this->Image_Frames_.get ();
}

image_info_t::Image_Frames_type& image_info_t::
Image_Frames ()
{
  return this->Image_Frames_.get ();
}

void image_info_t::
Image_Frames (const Image_Frames_type& x)
{
  this->Image_Frames_.set (x);
}

const image_info_t::Image_Lines_type& image_info_t::
Image_Lines () const
{
  return this->Image_Lines_.get ();
}

image_info_t::Image_Lines_type& image_info_t::
Image_Lines ()
{
  return this->Image_Lines_.get ();
}

void image_info_t::
Image_Lines (const Image_Lines_type& x)
{
  this->Image_Lines_.set (x);
}

const image_info_t::Image_Acquisition_Per_Line_type& image_info_t::
Image_Acquisition_Per_Line () const
{
  return this->Image_Acquisition_Per_Line_.get ();
}

image_info_t::Image_Acquisition_Per_Line_type& image_info_t::
Image_Acquisition_Per_Line ()
{
  return this->Image_Acquisition_Per_Line_.get ();
}

void image_info_t::
Image_Acquisition_Per_Line (const Image_Acquisition_Per_Line_type& x)
{
  this->Image_Acquisition_Per_Line_.set (x);
}

const image_info_t::Image_Acquisition_Size_type& image_info_t::
Image_Acq